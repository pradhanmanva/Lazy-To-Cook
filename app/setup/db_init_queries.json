[
	"DROP TABLE IF EXISTS restaurant;",
	"CREATE TABLE restaurant (restaurant_id BIGINT NOT NULL AUTO_INCREMENT, restaurant_name TEXT DEFAULT NOT NULL, contact BIGINT DEFAULT NULL, email TEXT DEFAULT NOT NULL, website TEXT DEFAULT NULL, PRIMARY KEY (restaurant_id));",

	"DROP TABLE IF EXISTS restaurant_authentication;",
	"CREATE TABLE restaurant_authentication (restaurant_id BIGINT NOT NULL AUTO_INCREMENT, username VARCHAR(10) NOT NULL UNIQUE, password TEXT NOT NULL, FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id) ON DELETE CASCADE);",

	"DROP TABLE IF EXISTS address;",
	"CREATE TABLE address (address_id BIGINT NOT NULL AUTO_INCREMENT, line_1 TEXT NOT NULL, line_2 TEXT, city TEXT NOT NULL, state TEXT NOT NULL, zipcode INTEGER NOT NULL, PRIMARY KEY (address_id));",

	"DROP TABLE IF EXISTS outlet;",
	"CREATE TABLE outlet (outlet_id BIGINT NOT NULL AUTO_INCREMENT, outlet_name TEXT NOT NULL, outlet_address BIGINT NOT NULL, outlet_contact TEXT DEFAULT NULL, restaurant_id BIGINT NOT NULL, FOREIGN KEY (outlet_address) REFERENCES address(address_id), FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id) ON DELETE CASCADE, PRIMARY KEY(outlet_id));",
	
	"DROP TABLE IF EXISTS timing;",
	"CREATE TABLE timing (timing_id BIGINT NOT NULL AUTO_INCREMENT, outlet_id BIGINT NOT NULL, day VARCHAR(9) NOT NULL, start_hour NUMERIC NOT NULL, end_hour NUMERIC NOT NULL, PRIMARY KEY (timing_id), FOREIGN KEY (outlet_id) REFERENCES outlet(outlet_id));",

	"DROP TABLE IF EXISTS category;",
	"CREATE TABLE category (category_id BIGINT NOT NULL AUTO_INCREMENT, category_name TEXT NOT NULL, restaurant_id BIGINT NOT NULL, PRIMARY KEY (category_id), FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id) ON DELETE CASCADE);",

	"DROP TABLE IF EXISTS item;",
	"CREATE TABLE item (item_id BIGINT NOT NULL AUTO_INCREMENT, item_name TEXT NOT NULL, description TEXT NOT NULL, price DOUBLE(10,2) NOT NULL, category_id BIGINT, PRIMARY KEY (item_id), FOREIGN KEY (category_id) REFERENCES category(category_id) ON DELETE SET NULL);",

	"DROP TABLE IF EXISTS item_outlet;",
	"CREATE TABLE item_outlet (item_id BIGINT NOT NULL AUTO_INCREMENT, outlet_id BIGINT NOT NULL, FOREIGN KEY (item_id) REFERENCES item(item_id) ON DELETE CASCADE, FOREIGN KEY (outlet_id) REFERENCES outlet(outlet_id) ON DELETE CASCADE);",

	"DROP TABLE IF EXISTS user;",
	"CREATE TABLE user (user_id BIGINT NOT NULL AUTO_INCREMENT, first_name VARCHAR(50) NOT NULL, middle_name VARCHAR(50) DEFAULT '', last_name VARCHAR(50) DEFAULT '', address BIGINT NOT NULL, date_of_birth VARCHAR(10), email_address VARCHAR(100) NOT NULL UNIQUE, PRIMARY KEY(user_id), FOREIGN KEY (address) REFERENCES address(address_id));",

	"DROP TABLE IF EXISTS user_authentication;",
	"CREATE TABLE user_authentication (user_id BIGINT NOT NULL AUTO_INCREMENT, password TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES user(user_id));",

	"DROP TABLE IF EXISTS cart;",
	"CREATE TABLE cart (cart_id BIGINT NOT NULL AUTO_INCREMENT, cart_name VARCHAR(20) NOT NULL DEFAULT 'CART', user_id BIGINT NOT NULL, PRIMARY KEY (cart_id), FOREIGN KEY(user_id) REFERENCES user(user_id));",

	"DROP TABLE IF EXISTS cart_item;",
	"CREATE TABLE cart_item (cart_id BIGINT NOT NULL AUTO_INCREMENT, item_id BIGINT NOT NULL, quantity NUMERIC DEFAULT 1, FOREIGN KEY (cart_id) REFERENCES cart(cart_id), FOREIGN KEY (item_id) REFERENCES item(item_id));"
]
